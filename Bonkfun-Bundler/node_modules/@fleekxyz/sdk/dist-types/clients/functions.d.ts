import { Client } from '@fleekxyz/gql-client-utils';
export type FunctionsClientOptions = {
    graphqlClient: Client;
};
export type CreateFunctionsArgs = {
    name: string;
    code: File;
    handler: string;
};
export type DeleteFunctionsArgs = {
    name: string;
};
export declare class FunctionsClient {
    private static FUNCTIONS_MAPPED_PROPERTIES;
    private graphqlClient;
    constructor(options: FunctionsClientOptions);
    create: ({ name, code, handler }: CreateFunctionsArgs) => Promise<Pick<{
        id: string;
        invokeUrl: string;
        name: string;
        projectId: string;
        slug: string;
        __typename: "Functions";
    }, "name" | "id" | "invokeUrl" | "projectId" | "slug" | "__typename">>;
    delete: ({ name }: DeleteFunctionsArgs) => Promise<Pick<{
        id: string;
        invokeUrl: string;
        name: string;
        projectId: string;
        slug: string;
        __typename: "Functions";
    }, "name" | "id" | "invokeUrl" | "projectId" | "slug" | "__typename">>;
    list: () => Promise<Pick<{
        id: string;
        invokeUrl: string;
        name: string;
        projectId: string;
        slug: string;
        __typename: "Functions";
    }, "name" | "id" | "invokeUrl" | "projectId" | "slug" | "__typename">[]>;
}
//# sourceMappingURL=functions.d.ts.map